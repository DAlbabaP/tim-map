'use client'

import { useState, useEffect } from 'react'
import { 
  Navigation, 
  RotateCcw, 
  Info, 
  Map as MapIcon, 
  Calendar,
  Flag,
  Expand,
  Minimize
} from 'lucide-react'
import { motion } from 'framer-motion'
import { useMapStore, useUserLocation } from '@/stores/mapStore'
import { useMobileState } from '@/stores/panelStore'
import { MapInfoModal } from '@/components/ui/MapInfoModal'

export function MapControls() {
  const [isFullscreen, setIsFullscreen] = useState(false)
  const [isMapInfoOpen, setIsMapInfoOpen] = useState(false)
  const { isMobile } = useMobileState()
  const { setUserLocation, setLocating, mapInstance } = useMapStore()
  const { location, isLocating } = useUserLocation()

  // –û—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
  useEffect(() => {
    const handleFullscreenChange = () => {
      setIsFullscreen(!!document.fullscreenElement)
    }

    document.addEventListener('fullscreenchange', handleFullscreenChange)
    return () => document.removeEventListener('fullscreenchange', handleFullscreenChange)
  }, [])

  // –ì–µ–æ–ª–æ–∫–∞—Ü–∏—è
  const handleLocation = () => {
    if (!navigator.geolocation) {
      alert('–ì–µ–æ–ª–æ–∫–∞—Ü–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è –≤ –≤–∞—à–µ–º –±—Ä–∞—É–∑–µ—Ä–µ')
      return
    }

    setLocating(true)

    navigator.geolocation.getCurrentPosition(
      (position) => {
        const { latitude, longitude } = position.coords
        setUserLocation([longitude, latitude])
        setLocating(false)
        
        // –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º –∫–∞—Ä—Ç—É –Ω–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        if (mapInstance) {
          const view = mapInstance.getView()
          if (view) {
            // –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç –¥–ª—è —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∞—Ü–∏–∏ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç
            import('ol/proj').then(({ fromLonLat }) => {
              const webMercatorCoords = fromLonLat([longitude, latitude])
              view.animate({
                center: webMercatorCoords,
                zoom: Math.max(view.getZoom() || 16, 17),
                duration: 800
              })
              console.log('üìç –ö–∞—Ä—Ç–∞ —Ü–µ–Ω—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–∏:', latitude, longitude)
            }).catch(error => {
              console.error('‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞ ol/proj:', error)
            })
          }
        } else {
          console.log('üìç –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–æ, –Ω–æ –∫–∞—Ä—Ç–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞:', latitude, longitude)
        }
      },
      (error) => {
        setLocating(false)
        console.error('–û—à–∏–±–∫–∞ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏:', error)
        
        let message = '–ù–µ —É–¥–∞–ª–æ—Å—å –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ'
        switch (error.code) {
          case error.PERMISSION_DENIED:
            message = '–î–æ—Å—Ç—É–ø –∫ –≥–µ–æ–ª–æ–∫–∞—Ü–∏–∏ –æ—Ç–∫–ª–æ–Ω–µ–Ω'
            break
          case error.POSITION_UNAVAILABLE:
            message = '–ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–æ'
            break
          case error.TIMEOUT:
            message = '–ü—Ä–µ–≤—ã—à–µ–Ω–æ –≤—Ä–µ–º—è –æ–∂–∏–¥–∞–Ω–∏—è'
            break
        }
        alert(message)
      },
      {
        enableHighAccuracy: true,
        timeout: 10000,
        maximumAge: 300000 // 5 –º–∏–Ω—É—Ç
      }
    )
  }

  // –°–±—Ä–æ—Å –≤–∏–¥–∞ –∫–∞—Ä—Ç—ã
  const handleResetView = () => {
    if (!mapInstance) {
      console.warn('‚ùå –ö–∞—Ä—Ç–∞ –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è —Å–±—Ä–æ—Å–∞ –≤–∏–¥–∞')
      return
    }

    const view = mapInstance.getView()
    if (view) {
      // –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Å–±—Ä–æ—Å –∫ –Ω–∞—á–∞–ª—å–Ω—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º (–∏–∑ —Å—Ç–∞—Ä–æ–π –≤–µ—Ä—Å–∏–∏)
      view.animate({
        center: [4180050.855075, 7525234.989304], // –¶–µ–Ω—Ç—Ä —É–Ω–∏–≤–µ—Ä—Å–∏—Ç–µ—Ç–∞
        zoom: 16,
        duration: 1000
      })
      console.log('üîÑ –í–∏–¥ –∫–∞—Ä—Ç—ã —Å–±—Ä–æ—à–µ–Ω –∫ –Ω–∞—á–∞–ª—å–Ω—ã–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º')
    }
  }

  // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞
  const toggleFullscreen = async () => {
    try {
      if (!document.fullscreenElement) {
        await document.documentElement.requestFullscreen()
      } else {
        await document.exitFullscreen()
      }
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞:', error)
    }
  }

  // –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ä—Ç–µ
  const handleMapInfo = () => {
    setIsMapInfoOpen(true)
    console.log('‚ÑπÔ∏è –û—Ç–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–µ–π –æ –∫–∞—Ä—Ç–µ')
  }

  // –ù–∞–≤–∏–≥–∞—Ç–æ—Ä –º–∞—Ä—à—Ä—É—Ç–æ–≤
  const handleNavigator = () => {
    // TODO: –û—Ç–∫—Ä—ã—Ç—å –ø–∞–Ω–µ–ª—å –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –º–∞—Ä—à—Ä—É—Ç–æ–≤
    console.log('üó∫Ô∏è –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –º–∞—Ä—à—Ä—É—Ç–∞')
  }

  // –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è
  const handleEvents = () => {
    // TODO: –ü–æ–∫–∞–∑–∞—Ç—å –∫–∞–ª–µ–Ω–¥–∞—Ä—å –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π
    console.log('üìÖ –ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è')
  }

  // –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É
  const handleReportIssue = () => {
    // TODO: –û—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –æ–±—Ä–∞—Ç–Ω–æ–π —Å–≤—è–∑–∏
    console.log('üö© –°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ')
  }

  return (
    <>
      {/* –û—Å–Ω–æ–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Å–ø—Ä–∞–≤–∞ */}
      <div className="absolute right-4 top-4 z-map-controls flex flex-col gap-2">
        {/* –ö–Ω–æ–ø–∫–∞ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è */}
        <motion.button
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          onClick={handleLocation}
          disabled={isLocating}
          className="btn-map-control group relative"
          title="–ú–æ—ë –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ"
        >
          {isLocating ? (
            <div className="loading-spinner h-5 w-5" />
          ) : (
            <Navigation 
              className={`h-5 w-5 transition-colors ${
                location ? 'text-university-primary' : 'text-gray-600'
              }`} 
            />
          )}
          
          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è */}
          {location && !isLocating && (
            <div className="absolute -top-1 -right-1 h-3 w-3 rounded-full bg-university-primary" />
          )}
        </motion.button>

        {/* –ö–Ω–æ–ø–∫–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π */}
        <motion.button
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          onClick={handleEvents}
          className="btn-map-control"
          title="–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è"
        >
          <Calendar className="h-5 w-5 text-gray-600" />
        </motion.button>

        {/* –ö–Ω–æ–ø–∫–∞ —Å–±—Ä–æ—Å–∞ –≤–∏–¥–∞ */}
        <motion.button
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          onClick={handleResetView}
          className="btn-map-control"
          title="–°–±—Ä–æ—Å–∏—Ç—å –≤–∏–¥"
        >
          <RotateCcw className="h-5 w-5 text-gray-600" />
        </motion.button>

        {/* –ö–Ω–æ–ø–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ä—Ç–µ */}
        <motion.button
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          onClick={handleMapInfo}
          className="btn-map-control"
          title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –∫–∞—Ä—Ç–µ"
        >
          <Info className="h-5 w-5 text-gray-600" />
        </motion.button>

        {/* –ö–Ω–æ–ø–∫–∞ –Ω–∞–≤–∏–≥–∞—Ç–æ—Ä–∞ */}
        <motion.button
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          onClick={handleNavigator}
          className="btn-map-control"
          title="–ü–æ—Å—Ç—Ä–æ–∏—Ç—å –º–∞—Ä—à—Ä—É—Ç"
        >
                     <MapIcon className="h-5 w-5 text-gray-600" />
        </motion.button>
      </div>

      {/* –≠–ª–µ–º–µ–Ω—Ç—ã —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–Ω–∏–∑—É —Å–ø—Ä–∞–≤–∞ */}
      <div className="absolute bottom-4 right-4 z-map-controls flex gap-2">
        {/* –ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º */}
        <motion.button
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          onClick={toggleFullscreen}
          className="btn-map-control"
          title={isFullscreen ? '–í—ã–π—Ç–∏ –∏–∑ –ø–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω–æ–≥–æ —Ä–µ–∂–∏–º–∞' : '–ü–æ–ª–Ω–æ—ç–∫—Ä–∞–Ω–Ω—ã–π —Ä–µ–∂–∏–º'}
        >
          {isFullscreen ? (
            <Minimize className="h-5 w-5 text-gray-600" />
          ) : (
            <Expand className="h-5 w-5 text-gray-600" />
          )}
        </motion.button>

        {/* –ü–æ–∂–∞–ª–æ–≤–∞—Ç—å—Å—è –Ω–∞ –ø—Ä–æ–±–ª–µ–º—É */}
        <motion.button
          whileHover={{ scale: 1.05 }}
          whileTap={{ scale: 0.95 }}
          onClick={handleReportIssue}
          className="btn-map-control"
          title="–°–æ–æ–±—â–∏—Ç—å –æ –ø—Ä–æ–±–ª–µ–º–µ"
        >
          <Flag className="h-5 w-5 text-gray-600" />
        </motion.button>
      </div>

      {/* –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
      {isMobile && (
        <div className="absolute bottom-4 left-4 z-map-controls">
          {/* –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏—è –¥–ª—è –º–æ–±–∏–ª—å–Ω—ã—Ö */}
          {location && (
            <motion.div
              initial={{ scale: 0 }}
              animate={{ scale: 1 }}
              className="flex items-center gap-2 rounded-full bg-white px-3 py-2 shadow-lg"
            >
              <div className="h-2 w-2 rounded-full bg-university-primary animate-pulse" />
              <span className="text-sm font-medium text-gray-700">
                –ú–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ –Ω–∞–π–¥–µ–Ω–æ
              </span>
            </motion.div>
          )}
        </div>
      )}

      {/* –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–∞—Ä—Ç–µ */}
      <MapInfoModal 
        isOpen={isMapInfoOpen}
        onClose={() => setIsMapInfoOpen(false)}
      />
    </>
  )
} 